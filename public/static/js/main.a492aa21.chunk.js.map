{"version":3,"sources":["context/SocketContext.js","hooks/useSocket.js","components/BandList.js","components/BandAdd.js","components/BandChart.js","pages/HomePage.js","BandNamesApp.js","index.js"],"names":["SocketContext","createContext","SocketProvider","children","serverPath","socket","useMemo","io","connect","transports","useState","online","setOnline","useEffect","connected","on","useSocket","Provider","value","BandList","bands","setBands","useContext","off","className","map","name","votes","id","onClick","emit","handleVoteBand","onChange","event","target","band","handleChangeName","onBlur","newName","handleBlur","handleRemoveBand","BandAdd","setName","onSubmit","e","preventDefault","trim","placeholder","BandChart","createGrafic","ctx","document","getElementById","Chart","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","animation","scales","yAxes","stacked","HomePage","BandNamesApp","ReactDOM","render"],"mappings":"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","file":"static/js/main.a492aa21.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nimport { useSocket } from \"../hooks/useSocket\";\r\n\r\nexport const SocketContext = createContext();\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n\r\n  const { socket, online } = useSocket('https://developaul-bandnames.herokuapp.com');\r\n\r\n  return (\r\n    <SocketContext.Provider\r\n      value={{\r\n        socket,\r\n        online\r\n      }}\r\n    >\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n}","import { useMemo, useEffect, useState } from 'react';\r\nimport io from \"socket.io-client\";\r\n\r\nexport const useSocket = (serverPath) => {\r\n\r\n  // Connection to socket server\r\n  const socket = useMemo(() => io.connect(serverPath, { transports: ['websocket'] }), [serverPath]);\r\n  const [online, setOnline] = useState(false);\r\n\r\n  // Establecemos cuando nos conectamos\r\n  useEffect(() => {\r\n    setOnline(socket.connected);\r\n  }, [socket]);\r\n\r\n  // Escuchamos cuando nos reconectamos\r\n  useEffect(() => {\r\n    socket.on('connect', () => {\r\n      setOnline(true);\r\n    });\r\n  }, [socket]);\r\n\r\n  // Escuchamos cuando nos desconectamos\r\n  useEffect(() => {\r\n    socket.on('disconnect', () => {\r\n      setOnline(false);\r\n    });\r\n  }, [socket]);\r\n\r\n  return {\r\n    socket,\r\n    online\r\n  }\r\n\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { SocketContext } from '../context/SocketContext';\r\n\r\nexport const BandList = () => {\r\n\r\n  const [bands, setBands] = useState([]);\r\n  const { socket } = useContext(SocketContext);\r\n\r\n  useEffect(() => {\r\n    socket.on('current-bands', (bands) => setBands(bands));\r\n    return () => socket.off('current-bands');\r\n  }, [socket]);\r\n\r\n  const handleChangeName = (event, id) => {\r\n    const name = event.target.value;\r\n    setBands(bands => bands.map(band => band.id === id\r\n      ? { ...band, name }\r\n      : band));\r\n  }\r\n\r\n  const handleBlur = (id, newName) => socket.emit('change-name-band', { id, newName });\r\n\r\n  const handleVoteBand = id => socket.emit('vote-band', id);\r\n\r\n  const handleRemoveBand = id => socket.emit('remove-band', id);\r\n\r\n  const createRows = () => {\r\n    return (\r\n      bands.map(({ name, votes, id }) => (\r\n        <tr key={id}>\r\n          <td>\r\n            <button\r\n              className=\"btn btn-outline-primary\"\r\n              onClick={() => handleVoteBand(id)}\r\n            >\r\n              +1\r\n          </button>\r\n          </td>\r\n          <td>\r\n            <input\r\n              className=\"form-control\"\r\n              onChange={event => handleChangeName(event, id)}\r\n              onBlur={() => handleBlur(id, name)}\r\n              value={name}\r\n            />\r\n          </td>\r\n          <td>\r\n            <h3>{votes}</h3>\r\n          </td>\r\n          <td>\r\n            <button\r\n              className=\"btn btn-outline-danger\"\r\n              onClick={() => handleRemoveBand(id)}\r\n            >\r\n              Borrar\r\n          </button>\r\n          </td>\r\n        </tr>\r\n      ))\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table table-stripped text-white\">\r\n        <thead>\r\n          <tr>\r\n            <th></th>\r\n            <th>Nombre</th>\r\n            <th>Votos</th>\r\n            <th>Borrar</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {createRows()}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  )\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { SocketContext } from '../context/SocketContext';\r\n\r\nexport const BandAdd = () => {\r\n\r\n  const [name, setName] = useState('');\r\n  const { socket } = useContext(SocketContext);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (!name.trim()) return;\r\n\r\n    socket.emit('create-band', { name });\r\n\r\n    setName('');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3>Agregar Banda</h3>\r\n\r\n      <form\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <input\r\n          className=\"form-control\"\r\n          placeholder=\"Nuevo nombre de banda\"\r\n          value={name}\r\n          onChange={({ target }) => setName(target.value)}\r\n        />\r\n      </form>\r\n    </>\r\n  )\r\n}","import React, { useEffect, useContext } from 'react';\r\nimport { Chart } from 'chart.js';\r\n\r\nimport { SocketContext } from '../context/SocketContext';\r\n\r\nexport const BandChart = () => {\r\n\r\n  const { socket } = useContext(SocketContext);\r\n\r\n  useEffect(() => {\r\n    socket.on('current-bands', bands => createGrafic(bands));\r\n    return () => socket.off('current-bands');\r\n  }, [socket]);\r\n\r\n  const createGrafic = (bands = []) => {\r\n    const ctx = document.getElementById('myChart');\r\n    new Chart(ctx, {\r\n      type: 'horizontalBar',\r\n      data: {\r\n        labels: bands.map(band => band.name),\r\n        datasets: [{\r\n          label: '# of Votes',\r\n          data: bands.map(band => band.votes),\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.2)',\r\n            'rgba(54, 162, 235, 0.2)',\r\n            'rgba(255, 206, 86, 0.2)',\r\n            'rgba(75, 192, 192, 0.2)',\r\n            'rgba(153, 102, 255, 0.2)',\r\n            'rgba(255, 159, 64, 0.2)'\r\n          ],\r\n          borderColor: [\r\n            'rgba(255, 99, 132, 1)',\r\n            'rgba(54, 162, 235, 1)',\r\n            'rgba(255, 206, 86, 1)',\r\n            'rgba(75, 192, 192, 1)',\r\n            'rgba(153, 102, 255, 1)',\r\n            'rgba(255, 159, 64, 1)'\r\n          ],\r\n          borderWidth: 1\r\n        }]\r\n      },\r\n      options: {\r\n        animation: false,\r\n        scales: {\r\n          yAxes: [{\r\n            stacked: true\r\n          }]\r\n        }\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  return (\r\n    <canvas id=\"myChart\" >\r\n    </canvas>\r\n  )\r\n}\r\n","import { useContext } from \"react\";\n\nimport { SocketContext } from '../context/SocketContext';\nimport { BandList } from \"../components/BandList\";\nimport { BandAdd } from \"../components/BandAdd\";\nimport { BandChart } from \"../components/BandChart\";\n\nexport const HomePage = () => {\n\n  const { online } = useContext(SocketContext);\n\n  return (\n    <div className=\"container\">\n      <div className=\"alert\">\n        <p>\n          Service status:\n          {(online)\n            ? <span className=\"text-success\"> Online</span>\n            : <span className=\"text-danger\"> Offline</span>\n          }\n        </p>\n      </div>\n\n      <h1>BandNames</h1>\n      <hr />\n\n      <div className=\"row\">\n        <div className=\"col\">\n          <BandChart />\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"order-1 col-md-8 order-md-0\">\n          <BandList />\n        </div>\n        <div className=\"my-3 col-md-4 my-md-0\">\n          <BandAdd />\n        </div>\n      </div>\n\n    </div>\n  );\n}","import React from 'react';\r\n\r\nimport { SocketProvider } from './context/SocketContext';\r\nimport { HomePage } from './pages/HomePage';\r\n\r\nexport const BandNamesApp = () => {\r\n  return (\r\n    <SocketProvider>\r\n      <HomePage />\r\n    </SocketProvider>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BandNamesApp } from './BandNamesApp';\n\nReactDOM.render(\n  <BandNamesApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}